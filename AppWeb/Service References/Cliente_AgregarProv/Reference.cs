//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppWeb.Cliente_AgregarProv {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Cliente_AgregarProv.IAgregarProv")]
    public interface IAgregarProv {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgregarProv/InsertarProveedor", ReplyAction="http://tempuri.org/IAgregarProv/InsertarProveedorResponse")]
        bool InsertarProveedor(string rut, string nombreFantasia, string email, string tel, bool esInactivo, bool esVip, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgregarProv/InsertarProveedor", ReplyAction="http://tempuri.org/IAgregarProv/InsertarProveedorResponse")]
        System.Threading.Tasks.Task<bool> InsertarProveedorAsync(string rut, string nombreFantasia, string email, string tel, bool esInactivo, bool esVip, string pass);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAgregarProvChannel : AppWeb.Cliente_AgregarProv.IAgregarProv, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AgregarProvClient : System.ServiceModel.ClientBase<AppWeb.Cliente_AgregarProv.IAgregarProv>, AppWeb.Cliente_AgregarProv.IAgregarProv {
        
        public AgregarProvClient() {
        }
        
        public AgregarProvClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AgregarProvClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgregarProvClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgregarProvClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool InsertarProveedor(string rut, string nombreFantasia, string email, string tel, bool esInactivo, bool esVip, string pass) {
            return base.Channel.InsertarProveedor(rut, nombreFantasia, email, tel, esInactivo, esVip, pass);
        }
        
        public System.Threading.Tasks.Task<bool> InsertarProveedorAsync(string rut, string nombreFantasia, string email, string tel, bool esInactivo, bool esVip, string pass) {
            return base.Channel.InsertarProveedorAsync(rut, nombreFantasia, email, tel, esInactivo, esVip, pass);
        }
    }
}
